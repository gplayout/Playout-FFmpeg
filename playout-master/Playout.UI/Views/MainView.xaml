<vbase:BaseWindowView x:Class="Playout.UI.Views.MainView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vbase="clr-namespace:Playout.UI.Base"
        xmlns:controls="clr-namespace:Playout.UI.Controls"
        xmlns:interactivity="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:metro="http://schemas.codeplex.com/elysium"
        xmlns:params="http://schemas.codeplex.com/elysium/params"
        xmlns:extra="http://schemas.extra.com/ui"
        WindowState="Maximized" AllowsTransparency="False"
        Title="" Height="768" Width="1024" >
    <Grid>
        <StackPanel Orientation="Horizontal" Grid.Column="0" Margin="0,-30,0,0" HorizontalAlignment="Center">
            <TextBlock Text="{Binding Path=OutputSettingVM.ChannelNameForPresent}" FontSize="23"/>
        </StackPanel>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>
            <Viewbox Grid.Row="0" Stretch="Uniform">
                <Grid >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <extra:AnimatedWrapPanel Grid.Column="0">
                        <metro:CommandButton Name="btnSettings" ToolTip="F2"
                            Margin="{Binding RelativeSource={RelativeSource Self}, Path=(params:General.BoldPadding), Mode=OneWay}" 
                            Style="{StaticResource SettingsCommandButtonStyle}" Click="btnSettings_Click"/>
                        <metro:CommandButton Name="btnSchedule" ToolTip="ALT+S"
                            Margin="{Binding RelativeSource={RelativeSource Self}, Path=(params:General.BoldPadding), Mode=OneWay}" 
                            Click="btnSchedule_Click"
                            Style="{StaticResource ScheduleCommandButtonStyle}"/>
                        <metro:CommandButton Name="btnGlobalSettings" ToolTip="ALT+G"
                            Margin="{Binding RelativeSource={RelativeSource Self}, Path=(params:General.BoldPadding), Mode=OneWay}" 
                            Style="{StaticResource GlobalSettingsCommandButtonStyle}" Click="btnGlobalSettings_Click"/>
                        <metro:CommandButton Name="btnTimerSettings" ToolTip="ALT+T"
                            Margin="{Binding RelativeSource={RelativeSource Self}, Path=(params:General.BoldPadding), Mode=OneWay}" 
                            Style="{StaticResource TimerSettingsCommandButtonStyle}" Click="btnTimerSettings_Click"/>
                        <metro:CommandButton Name="btnSaveSettings" ToolTip=""
                            Margin="{Binding RelativeSource={RelativeSource Self}, Path=(params:General.BoldPadding), Mode=OneWay}" 
                            Style="{StaticResource SaveCommandButtonStyle}" Click="btnSaveSettings_Click"/>
                    </extra:AnimatedWrapPanel>
                    <Border Grid.Column="1" HorizontalAlignment="Center">
                        <StackPanel Orientation="Vertical" Margin="50,0,20,0">
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                                <extra:Icon x:Name="iconStreamStarted" Height="15" Width="15" 
                                            VerticalAlignment="Center"
                                            Style="{StaticResource RecordingIconStyle}">
                                </extra:Icon>
                                <TextBlock FontSize="18" FontWeight="Bold" VerticalAlignment="Center"
                                    Margin="{Binding RelativeSource={RelativeSource Self}, Path=(params:General.BoldPadding), Mode=OneWay}">System Time:</TextBlock>
                                <TextBlock Text="{Binding Path=PlayerControlVM.NowTime,Converter={StaticResource TimeSpanToStringConverter}}" 
                                    Grid.Column="0" Grid.Row="2" FontSize="18" FontWeight="Bold" VerticalAlignment="Center"/>
                            </StackPanel>
                            <!--<StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                                <TextBlock Text="{Binding Path=PlayerControlVM.NowTimeZone}" 
                                    Margin="{Binding RelativeSource={RelativeSource Self}, Path=(params:General.BoldPadding), Mode=OneWay}"
                                    Grid.Column="0" Grid.Row="2" FontSize="12" FontWeight="Bold" VerticalAlignment="Center"/>
                            </StackPanel>-->
                            <StackPanel Orientation="Horizontal">
                                <TextBlock FontSize="12" FontWeight="Bold"
                                        Margin="3" Text="Time in "/>
                                <TextBlock Text="{Binding Path=OutputSettingVM.AlternateTimeZone}" FontSize="10" FontWeight="Bold" VerticalAlignment="Center"
                                        Margin="3"/>
                                <TextBlock FontSize="10" FontWeight="Bold" Text=" : "
                                        Margin="3"></TextBlock>
                                <TextBlock Margin="3" Text="{Binding Path=OutputSettingVM.AlternateDateTime}" 
                                        FontSize="10" FontWeight="Bold" VerticalAlignment="Center"/>
                            </StackPanel>
                        </StackPanel>

                    </Border>
                    <Border Grid.Column="2" HorizontalAlignment="Stretch">
                        <controls:PlayerControlView x:Name="playerControl"/>
                    </Border>
                    <extra:AnimatedWrapPanel Grid.Column="3" HorizontalAlignment="Right">
                        <metro:CommandButton Name="btnStreamOut"
                           Margin="{Binding RelativeSource={RelativeSource Self}, Path=(params:General.BoldPadding), Mode=OneWay}" 
                           Style="{StaticResource StreamOutCommandButtonStyle}" Click="btnStreamOut_Click" ToolTip="Alt+R"/>
                        <metro:CommandButton Margin="{Binding RelativeSource={RelativeSource Self}, Path=(params:General.BoldPadding), Mode=OneWay}"
                           Style="{StaticResource ActivationCommandButtonStyle}" x:Name="btnActivation" Click="btnActivation_Click" Visibility="Collapsed"/>
                        <metro:CommandButton Name="btnHelp"
                           Margin="{Binding RelativeSource={RelativeSource Self}, Path=(params:General.BoldPadding), Mode=OneWay}" 
                           Style="{StaticResource HelpCommandButtonStyle}" Visibility="Collapsed"/>
                    </extra:AnimatedWrapPanel>
                </Grid>
            </Viewbox>

            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <controls:Player Grid.Column="0"  x:Name="videoPlayerUC"/>
                <Border Grid.Column="1" Margin="{Binding RelativeSource={RelativeSource Self}, Path=(params:General.BoldPadding), Mode=OneWay}">
                    <controls:VUMeter Width="70" VerticalAlignment="Bottom" Height="200" x:Name="vuMeter"></controls:VUMeter>
                </Border>
                <StackPanel Orientation="Vertical" Grid.Column="2">
                    <Border HorizontalAlignment="Stretch" Margin="7,-10,7,0" BorderBrush="{StaticResource WarningActionBrush}" BorderThickness="0,0,0,0.5">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                            </Grid.RowDefinitions>
                            <TextBlock Margin="0,0,0,-10" Grid.Row="0"
                                Text="{Binding Path=PlayerControlVM.CurrentItemTimeElapsed,Converter={StaticResource TimeSpanToStringConverter}}" 
                                FontSize="30" FontWeight="Bold" HorizontalAlignment="Center"/>
                            <Grid HorizontalAlignment="Stretch" Grid.Row="1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="auto"/>
                                </Grid.ColumnDefinitions>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock FontSize="12" FontWeight="Bold" Text="Elapsed Time:" Margin="3"
                                        Foreground="{StaticResource PositiveActionBrush}"/>
                                    <TextBlock Margin="3" Text="{Binding Path=PlayerControlVM.CurrentItemTimeElapsed,Converter={StaticResource TimeSpanToStringConverter}}" 
                                        Foreground="{StaticResource PositiveActionBrush}"
                                        FontSize="12" FontWeight="Bold" VerticalAlignment="Center"/>
                                </StackPanel>
                                <Slider x:Name="pbCurrentFrame" IsManipulationEnabled="False" Grid.Column="1"    
                                    Value="{Binding Path= PlayerControlVM.Dg.CurrentPlayerAsUri.MediaPositionPlusOffset}"
                                    Minimum="0" HorizontalAlignment="Stretch" Orientation="Horizontal"
                                    Margin="7,3,7,3">
                                    <Slider.Foreground>
                                        <LinearGradientBrush EndPoint="1,0.5" MappingMode="RelativeToBoundingBox" StartPoint="0,0.5">
                                            <GradientStop Color="#A2AEFF00" Offset="0"/>
                                            <GradientStop Color="#FFDCFF00" Offset="0.71"/>
                                            <GradientStop Color="#A2AEFF00" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Slider.Foreground>
                                    <Slider.Style>
                                        <Style TargetType="{x:Type Slider}" BasedOn="{StaticResource DefaultSliderStyle}">
                                            <Setter Property="Maximum" Value="{Binding Path=PlayerControlVM.Dg.CurrentPlayerAsUri.Duration}"></Setter>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Path=PlayerControlVM.Dg.CurrentPlayerAsUri.Duration}" Value="0">
                                                    <Setter Property="Maximum" Value="1"></Setter>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Slider.Style>
                                </Slider>
                                <StackPanel Orientation="Horizontal" Grid.Column="2">
                                    <TextBlock FontSize="12" FontWeight="Bold" Text="Remained Time:" Margin="3"
                                        Foreground="{StaticResource PositiveActionBrush}"/>
                                    <TextBlock Margin="3" Foreground="{StaticResource PositiveActionBrush}"
                                        Text="{Binding Path=PlayerControlVM.CurrentItemTimeRemained,Converter={StaticResource TimeSpanToStringConverter}}" 
                                        FontSize="12" FontWeight="Bold" VerticalAlignment="Center"/>
                                </StackPanel>
                            </Grid>
                            <Grid Margin="0,-7,0,3" Grid.Row="2" HorizontalAlignment="Stretch">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="auto"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Column="0" Text="{Binding Path=PlayerControlVM.CurrentMediaSource.InputNameAbbrivated}" 
                                    FontSize="20" FontWeight="Normal" HorizontalAlignment="Center"/>
                                <StackPanel Orientation="Horizontal" Grid.Column="1" Margin="20,3,20,0" HorizontalAlignment="Right" VerticalAlignment="Center">
                                    <TextBlock FontSize="18" VerticalAlignment="Top" Margin="0,0,5,0">Loop Item:</TextBlock>
                                    <extra:Icon x:Name="itemLoopIcon" Height="31" Width="31" MouseLeftButtonUp="itemLoopIcon_MouseLeftButtonUp"
                                                Cursor="Hand">
                                        <extra:Icon.Style>
                                            <Style TargetType="{x:Type extra:Icon}" BasedOn="{StaticResource LoopIconStyle}">
                                                <Setter Property="Foreground" Value="{StaticResource DisabledBrush}"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Path=PlayerControlVM.CurrentMediaSource.Loop}" Value="True">
                                                        <Setter Property="Foreground" Value="{StaticResource PositiveActionBrush}"></Setter>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </extra:Icon.Style>
                                    </extra:Icon>
                                </StackPanel>
                            </Grid>
                        </Grid>
                    </Border>
                    <Border HorizontalAlignment="Stretch" Margin="7,-8,7,0" BorderBrush="{StaticResource WarningActionBrush}" BorderThickness="0,0,0,0.5">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                            </Grid.RowDefinitions>
                            <TextBlock Margin="0,0,0,-10" Grid.Row="0"
                                Text="{Binding Path=PlayerControlVM.CurrentPlaylistTimeElapsed,Converter={StaticResource TimeSpanToStringConverter}}" 
                                FontSize="30" FontWeight="Bold" HorizontalAlignment="Center"/>
                            <Grid HorizontalAlignment="Stretch" Grid.Row="1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="auto"/>
                                </Grid.ColumnDefinitions>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock FontSize="12" FontWeight="Bold" Text="Elapsed Time:" Margin="3"
                                        Foreground="{StaticResource WarningActionBrush}"/>
                                    <TextBlock Margin="3" Text="{Binding Path=PlayerControlVM.CurrentPlaylistTimeElapsed,Converter={StaticResource TimeSpanToStringConverter}}" 
                                        Foreground="{StaticResource WarningActionBrush}"
                                        FontSize="12" FontWeight="Bold" VerticalAlignment="Center"/>
                                </StackPanel>
                                <Slider IsManipulationEnabled="False" Grid.Column="1"
                                    Value="{Binding Path= PlayerControlVM.CurrentPlaylistTimeElapsed,Converter={StaticResource TimeSpanToDoubleConverter},Mode=OneWay}"
                                    Maximum="{Binding Path=PlayerControlVM.CurrentPlaylistTimeTotal,Converter={StaticResource TimeSpanToDoubleConverter},Mode=OneWay}"
                                    Minimum="0" HorizontalAlignment="Stretch" Orientation="Horizontal"
                                    Margin="7,3,7,3">
                                    <Slider.Foreground>
                                        <LinearGradientBrush EndPoint="1,0.5" MappingMode="RelativeToBoundingBox" StartPoint="0,0.5">
                                            <GradientStop Color="#A2AEFF00" Offset="0"/>
                                            <GradientStop Color="#FFDCFF00" Offset="0.71"/>
                                            <GradientStop Color="#A2AEFF00" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Slider.Foreground>
                                </Slider>
                                <StackPanel Orientation="Horizontal" Grid.Column="2">
                                    <TextBlock FontSize="12" FontWeight="Bold" Text="Remained Time:" Margin="3"
                                        Foreground="{StaticResource WarningActionBrush}"/>
                                    <TextBlock Margin="3" Foreground="{StaticResource WarningActionBrush}"
                                        Text="{Binding Path=PlayerControlVM.CurrentPlaylistTimeRemained,Converter={StaticResource TimeSpanToStringConverter}}" 
                                        FontSize="12" FontWeight="Bold" VerticalAlignment="Center"/>
                                </StackPanel>
                            </Grid>
                            <Grid Margin="0,-7,0,3" Grid.Row="2" HorizontalAlignment="Stretch">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="auto"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Column="0" Text="{Binding Path=PlayerControlVM.CurrentPlaylist.InputNameAbbrivated,UpdateSourceTrigger=PropertyChanged}" 
                                    FontSize="20" FontWeight="Normal" HorizontalAlignment="Center"/>
                                <StackPanel Grid.Column="1" Orientation="Horizontal" Margin="20,3,20,0" 
                                            VerticalAlignment="Center" HorizontalAlignment="Right">
                                    <TextBlock FontSize="18" VerticalAlignment="Top" Margin="0,0,5,0">Loop Playlist:</TextBlock>
                                    <extra:Icon x:Name="iconLoopPlaylist" Height="31" Width="31" 
                                                Cursor="Hand"
                                                MouseLeftButtonUp="iconLoopPlaylist_MouseLeftButtonUp">
                                        <extra:Icon.Style>
                                            <Style TargetType="{x:Type extra:Icon}" BasedOn="{StaticResource LoopIconStyle}">
                                                <Setter Property="Foreground" Value="{StaticResource DisabledBrush}"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Path=PlayerControlVM.CurrentPlaylist.Loop}" Value="True">
                                                        <Setter Property="Foreground" Value="{StaticResource WarningActionBrush}"></Setter>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </extra:Icon.Style>
                                    </extra:Icon>
                                </StackPanel>
                            </Grid>
                        </Grid>
                    </Border>
                    <Border Margin="{Binding RelativeSource={RelativeSource Self}, Path=(params:General.BoldPadding), Mode=OneWay}" VerticalAlignment="Top">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                            </Grid.RowDefinitions>
                            <Border Grid.Row="0" HorizontalAlignment="Stretch" BorderBrush="{StaticResource WarningActionBrush}" BorderThickness="0,0,0,0.5">
                                <StackPanel Orientation="Horizontal" >
                                    <TextBlock FontSize="12" FontWeight="Bold" Margin="7">Time to Next Playlist:</TextBlock>
                                    <TextBlock Text="{Binding Path=PlayerControlVM.CurrentPlaylistTimeRemained,Converter={StaticResource TimeSpanToStringConverter}}" 
                                        FontSize="12" FontWeight="Bold" VerticalAlignment="Center"/>

                                    <TextBlock FontSize="12" FontWeight="Bold" Margin="14,7,7,7">Playlist Start Time:</TextBlock>
                                    <TextBlock Text="{Binding Path=PlayerControlVM.CurrentPlaylistStartTime,Converter={StaticResource TimeSpanToStringConverter}}" 
                                        FontSize="12" FontWeight="Bold" VerticalAlignment="Center"/>

                                    <TextBlock FontSize="12" FontWeight="Bold" Margin="14,7,7,7">Total Duration:</TextBlock>
                                    <TextBlock Text="{Binding Path=PlayerControlVM.TotalDuration,Converter={StaticResource TimeSpanToStringConverter}}" 
                                        FontSize="12" FontWeight="Bold" VerticalAlignment="Center"/>

                                    <TextBlock FontSize="12" FontWeight="Bold" Margin="14,7,7,7">Player Start Time:</TextBlock>
                                    <TextBlock Text="{Binding Path=PlayerControlVM.PlayerStartTime,Converter={StaticResource TimeSpanToStringConverter}}" 
                                        FontSize="12" FontWeight="Bold" VerticalAlignment="Center"/>

                                    <!--<TextBlock FontSize="12" FontWeight="Bold" Margin="14,7,7,7">Elapsed Time:</TextBlock>
                                    <TextBlock Text="{Binding Path=PlayerControlVM.PlayerTimeElapsed,Converter={StaticResource TimeSpanToStringConverter}}" 
                                        FontSize="12" FontWeight="Bold" VerticalAlignment="Center"/>

                                    <TextBlock FontSize="12" FontWeight="Bold" Margin="14,7,7,7">Remained Time:</TextBlock>
                                    <TextBlock Text="{Binding Path=PlayerControlVM.PlayerTimeRemained,Converter={StaticResource TimeSpanToStringConverter}}" 
                                        FontSize="12" FontWeight="Bold" VerticalAlignment="Center"/>-->
                                </StackPanel>
                            </Border>
                            <Border Grid.Row="1" HorizontalAlignment="Stretch" BorderBrush="{StaticResource WarningActionBrush}" BorderThickness="0,0,0,0">
                                <StackPanel Orientation="Horizontal" >
                                    <extra:Icon Style="{StaticResource StopClockIconStyle}" />
                                    <TextBlock FontSize="12" FontWeight="Bold" Margin="7,7,30,7" Foreground="{StaticResource AdobeApplicationBrush}">Timer:</TextBlock>
                                    <TextBlock FontSize="12" FontWeight="Bold"
                                        Margin="{Binding RelativeSource={RelativeSource Self}, Path=(params:General.BoldPadding), Mode=OneWay}">Play Start Time:</TextBlock>
                                    <TextBlock Text="{Binding Path=TimerSettingVM.PlayTime,Converter={StaticResource TimeSpanToStringConverter}}" 
                                        Foreground="{StaticResource AdobeApplicationBrush}" FontSize="12" FontWeight="Bold" VerticalAlignment="Center"/>

                                    <TextBlock FontSize="12" FontWeight="Bold" Margin="14,7,7,7">Play Countdown:</TextBlock>
                                    <TextBlock Text="{Binding Path=TimerSettingVM.CountdownTime,Converter={StaticResource TimeSpanToStringConverter}}" 
                                        Foreground="{StaticResource AdobeApplicationBrush}" FontSize="12" FontWeight="Bold" VerticalAlignment="Center"/>
                                </StackPanel>
                            </Border>
                        </Grid>
                    </Border>
                    <StackPanel Orientation="Vertical" Visibility="Collapsed">
                        <StackPanel Orientation="Horizontal">
                            <Label Margin="{Binding RelativeSource={RelativeSource Self}, Path=(params:General.BoldPadding), Mode=OneWay}">File:</Label>
                            <TextBlock Text="{Binding Path=PlayerControlVM.CurrentMediaSource.FileName}"></TextBlock>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <Label Margin="{Binding RelativeSource={RelativeSource Self}, Path=(params:General.BoldPadding), Mode=OneWay}">Video Codec:</Label>
                            <TextBlock x:Name="tbCurrentVideoCodec"
                                   Margin="{Binding RelativeSource={RelativeSource Self}, Path=(params:General.BoldPadding), Mode=OneWay}"/>
                            <Label Margin="{Binding RelativeSource={RelativeSource Self}, Path=(params:General.BoldPadding), Mode=OneWay}">, Audio Codec:</Label>
                            <TextBlock x:Name="tbCurrentAudioCodec"
                                   Margin="{Binding RelativeSource={RelativeSource Self}, Path=(params:General.BoldPadding), Mode=OneWay}"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <Label Margin="{Binding RelativeSource={RelativeSource Self}, Path=(params:General.BoldPadding), Mode=OneWay}">Length:</Label>
                            <TextBlock Text="{Binding Path=PlayerControlVM.CurrentMediaSource.Duration,Converter={StaticResource TimeSpanToStringConverter}}"
                                   Margin="{Binding RelativeSource={RelativeSource Self}, Path=(params:General.BoldPadding), Mode=OneWay}"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <Label Margin="{Binding RelativeSource={RelativeSource Self}, Path=(params:General.BoldPadding), Mode=OneWay}">Frame Count:</Label>
                            <TextBlock Text="{Binding Path=PlayerControlVM.CurrentMediaSource.FrameCount}"
                                   Margin="{Binding RelativeSource={RelativeSource Self}, Path=(params:General.BoldPadding), Mode=OneWay}"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <Label Margin="{Binding RelativeSource={RelativeSource Self}, Path=(params:General.BoldPadding), Mode=OneWay}">Frame Rate:</Label>
                            <TextBlock Text="{Binding Path=PlayerControlVM.CurrentMediaSource.FrameRate}"
                                   Margin="{Binding RelativeSource={RelativeSource Self}, Path=(params:General.BoldPadding), Mode=OneWay}"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <Label Margin="{Binding RelativeSource={RelativeSource Self}, Path=(params:General.BoldPadding), Mode=OneWay}">Video Size:</Label>
                            <TextBlock Text="{Binding Path=PlayerControlVM.CurrentMediaSource.WidthHeight}"
                                   Margin="{Binding RelativeSource={RelativeSource Self}, Path=(params:General.BoldPadding), Mode=OneWay}"/>
                        </StackPanel>
                    </StackPanel>
                </StackPanel>
            </Grid>
            <Grid Grid.Row="3">
                <controls:MediaPlaylistsView x:Name="playlistsV" />
            </Grid>
            <Grid Grid.Row="3">
                <Expander VerticalAlignment="Bottom" Header="Input Preview" ExpandDirection="Down" IsExpanded="False">
                    <Expander.Style>
                        <Style TargetType="{x:Type Expander}" BasedOn="{StaticResource {x:Type Expander}}">
                            <Setter Property="HorizontalAlignment" Value="Left"></Setter>
                            <Style.Triggers>
                                <Trigger Property="IsExpanded" Value="True">
                                    <Setter Property="HorizontalAlignment" Value="Stretch"></Setter>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Expander.Style>
                    <controls:PreviewPanel x:Name="prevPanel"></controls:PreviewPanel>
                </Expander>
            </Grid>
            <Expander Grid.Row="3" Header="Stream Log" HorizontalAlignment="Right" IsExpanded="True" ExpandDirection="Down" VerticalAlignment="Bottom"
                      Visibility="{Binding ElementName=iconStreamStarted,Path=Visibility}">
                <Border HorizontalAlignment="Stretch" Background="Black" VerticalAlignment="Stretch"
                        BorderBrush="Yellow" BorderThickness="1">
                    <TextBox x:Name="txtStreamLog" HorizontalAlignment="Stretch" Background="Black" VerticalAlignment="Stretch" IsReadOnly="True"
                         Foreground="Yellow" Height="200" HorizontalContentAlignment="Left" VerticalContentAlignment="Top"
                         VerticalScrollBarVisibility="Auto" TextWrapping="Wrap" Width="300"></TextBox>
                </Border>
            </Expander>
        </Grid>
    </Grid>

</vbase:BaseWindowView>
