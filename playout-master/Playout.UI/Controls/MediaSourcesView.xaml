<vbase:BaseUserControlView x:Class="Playout.UI.Controls.MediaSourcesView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:vbase="clr-namespace:Playout.UI.Base"
             xmlns:metro="http://schemas.codeplex.com/elysium"
             xmlns:params="http://schemas.codeplex.com/elysium/params"
             xmlns:extra="http://schemas.extra.com/ui"
             xmlns:codes="clr-namespace:Playout.UI.Codes"  
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300" Loaded="BaseUserControlView_Loaded">
    <vbase:BaseUserControlView.Resources>
        <DataTemplate x:Key="thumbImageTemplate" DataType="{x:Type ContentControl}">
            <Image Width="40" Height="40" Stretch="Fill" 
                   Source="{Binding Path=DataContext.ThumbnailImage,UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource FindAncestor, AncestorType=ContentControl}}"
                   VerticalAlignment="Center" HorizontalAlignment="Left"></Image>
        </DataTemplate>
        <DataTemplate x:Key="thumbVideoMediaTemplate" DataType="{x:Type ContentControl}">
            <Grid>
                <MediaElement  Name="mediaElement" 
                        LoadedBehavior="Manual" IsMuted="True"
                        Source="{Binding Path=DataContext.File_Url,UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource FindAncestor, AncestorType=ContentControl,AncestorLevel=2}}"
                        MouseEnter="thumbVideoTemplate_MouseEnter"
                        MouseLeave="thumbVideoTemplate_MouseLeave"
                        Loaded="thumbVideoTemplate_Loaded">
                </MediaElement>
                <extra:Icon Style="{StaticResource ColumnOneIconStyle}" 
                    Name="thumbVideoOpenPopup" VerticalAlignment="Top" HorizontalAlignment="Right"
                    ToolTip="Show Preview"
                    Width="10" Height="10" PreviewMouseUp="thumbVideoOpenPopup_Click"></extra:Icon>
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="thumbVideoTemplate" DataType="{x:Type ContentControl}">
            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="Black">
                <Image MinWidth="40" MinHeight="40" Stretch="Fill"
                   Source="{Binding Path=DataContext.ThumbnailImageForVideoFile,UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource FindAncestor, AncestorType=ContentControl}}"
                   VerticalAlignment="Center" HorizontalAlignment="Left"></Image>
                <ContentControl Name="contentVideo"></ContentControl>
            </Grid>
            <DataTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="ContentTemplate" Value="{StaticResource thumbVideoMediaTemplate}"  TargetName="contentVideo" />
                </Trigger>
            </DataTemplate.Triggers>
        </DataTemplate>
        <ControlTemplate x:Key="ThumbColumnTemplate" TargetType="ContentControl">
            <StackPanel>
                <ContentControl Name="content" />
            </StackPanel>
            <ControlTemplate.Triggers>
                <DataTrigger Binding="{Binding Path=IsVideoFile,UpdateSourceTrigger=PropertyChanged}" Value="True">
                    <Setter Property="ContentTemplate" Value="{StaticResource thumbVideoTemplate}"  TargetName="content" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=IsVideoFile,UpdateSourceTrigger=PropertyChanged}" Value="False">
                    <Setter Property="ContentTemplate" Value="{StaticResource thumbImageTemplate}"  TargetName="content" />
                </DataTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </vbase:BaseUserControlView.Resources>
    <DataGrid x:Name="dgMediaItems" ItemsSource="{Binding Sources}" SelectedItem="{Binding SelectedSource}" PreviewMouseDoubleClick="dgMediaItems_MouseDoubleClick"
              AlternationCount="2" AlternatingRowBackground="#55575757" MouseDoubleClick="dgMediaItems_MouseDoubleClick" 
                          AutoGenerateColumns="False" CanUserAddRows="False" CanUserDeleteRows="False" SelectionMode="Extended"
              PreviewMouseDown="dgMediaItems_PreviewMouseDown"
              SelectionChanged="dgMediaItems_SelectionChanged" BorderThickness="2" >
        <DataGrid.ItemContainerStyle>
            <Style BasedOn="{StaticResource DraggableDataGridRowStyle}" TargetType="{x:Type DataGridRow}">
                <Setter Property="extra:DataGridRowAttached.MoveAboveCommand" Value="{Binding MoveAboveCommand}"/>
                <Setter Property="extra:DataGridRowAttached.MoveBelowCommand" Value="{Binding MoveBelowCommand}"/>
                <Setter Property="extra:DataGridRowAttached.MoveDragContentTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <StackPanel>
                                <TextBlock Margin="{Binding RelativeSource={RelativeSource Self}, Path=(params:General.BoldPadding), Mode=OneWay}"
                                         Style="{StaticResource HeaderTextStyle}" 
                                         Text="{Binding File_Url_DeviceName}"/>
                            </StackPanel>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="extra:DataGridRowAttached.MoveDragFormat" Value="Playout.ViewModels.ViewModels.MediaSourceViewModel.DataGrid"/>
            </Style>
        </DataGrid.ItemContainerStyle>
        <DataGrid.ContextMenu>
            <ContextMenu>
                <MenuItem Name="MenuItemAdd" Header="Add Media Item" InputGestureText="CTRL+I" Click="MenuItemAdd_Click" />
                <MenuItem Name="MenuItemAddFiles" Header="Add Media Files" InputGestureText="CTRL+M" Click="MenuItemAddFiles_Click"/>
                <Separator Name="MenuItemSepEdit"/>
                <MenuItem Name="MenuItemEdit" Header="Edit Media Item" Click="MenuItemEdit_Click"/>
                <MenuItem Name="MenuItemRemove" Header="Remove Media Item(s)" Click="MenuItemRemove_Click"/>
                <MenuItem Name="MenuItemTrim" Header="Media Trimming" InputGestureText="CTRL+E" Click="MenuItemTrim_Click"/>
                <MenuItem Name="MenuItemOVerlay" Header="Media Overlays" Click="MenuItemOVerlay_Click"/>
                <MenuItem Name="MenuItemLoop" Header="Loop On Media Item" InputGestureText="ALT+L" Click="MenuItemLoop_Click"
                          IsChecked="{Binding Path=SelectedSource.Loop}"/>
                <Separator Name="MenuItemSepMove"/>
                <MenuItem Name="MenuItemMove" Header="Move Selected Item(s) To" Click="MenuItemMove_Click"/>
                <Separator/>
                <MenuItem Name="MenuItemCopy" Header="Copy Media Item(s)" Click="MenuItemCopy_Click"/>
                <MenuItem Name="MenuItemPaste" Header="Paste Selected Item(s)" Click="MenuItemPaste_Click" />
            </ContextMenu>
        </DataGrid.ContextMenu>
        <DataGrid.Columns>
            <extra:DataGridTemplateColumn Width="auto" Header="FA" CanUserSort="False" CanUserReorder="False" IsReadOnly="True"
                    extra:DataGridColumnAttached.CanUserHideColumn="False"  AutomationProperties.Name="FA">
                <extra:DataGridTemplateColumn.CellTemplate>
                    <DataTemplate>
                        <Grid>
                            <extra:ExpanderMenu Grid.Column="0"
                                     IsExpanded="{Binding Path=IsSelected, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}">
                                <extra:ExpanderMenuItem Name="expMenuUp" Style="{StaticResource UpExpanderMenuItemStyle}"
                                                        Click="expMenuUp_Click"/>
                                <extra:ExpanderMenuItem Name="expMenuDown"  Style="{StaticResource DownExpanderMenuItemStyle}"
                                                        Click="expMenuDown_Click"/>
                                <extra:ExpanderMenuItem Style="{StaticResource DeleteExpanderMenuItemStyle}"
                                                        Click="MenuItemRemove_Click"/>
                                <extra:ExpanderMenuItem Style="{StaticResource EditPopupExpanderMenuItemStyle}"
                                                        Click="MenuItemEdit_Click"/>
                            </extra:ExpanderMenu>
                        </Grid>
                    </DataTemplate>
                </extra:DataGridTemplateColumn.CellTemplate>
            </extra:DataGridTemplateColumn>
            <extra:DataGridTextColumn Width="50" Header="#" 
                extra:DataGridColumnAttached.CanUserHideColumn="True" AutomationProperties.Name="RowNo"
                Binding="{Binding Path=Index}">
            </extra:DataGridTextColumn>
            <codes:ExtendedDataGridTemplateColumn Width="73" Header="Thumbnail"
                    extra:DataGridColumnAttached.CanUserHideColumn="True" AutomationProperties.Name="Thumbnail">
                <codes:ExtendedDataGridTemplateColumn.CellTemplate>
                    <DataTemplate>
                        <Grid>
                            <ContentControl Template="{StaticResource ThumbColumnTemplate}" />
                        </Grid>
                    </DataTemplate>
                </codes:ExtendedDataGridTemplateColumn.CellTemplate>
            </codes:ExtendedDataGridTemplateColumn>
            <!--<extra:DataGridTemplateColumn extra:DataGridColumnAttached.CanUserHideColumn="True" 
                        Header="NPSColor" AutomationProperties.Name="NPSColor" Width="auto" >
                <DataGridTemplateColumn.CellTemplate>
                    <DataTemplate>
                        <Ellipse Width="20" Height="15" >
                            <Ellipse.Fill>
                                <SolidColorBrush Color="{Binding Path=NestedPlaylist.Color,Converter={StaticResource IntToColorConverter}}"></SolidColorBrush>
                            </Ellipse.Fill>
                        </Ellipse>
                    </DataTemplate>
                </DataGridTemplateColumn.CellTemplate>
            </extra:DataGridTemplateColumn>-->
            <extra:DataGridTemplateColumn extra:DataGridColumnAttached.CanUserHideColumn="True" 
                            Header="PL" AutomationProperties.Name="PSColor" Width="auto" >
                <DataGridTemplateColumn.CellTemplate>
                    <DataTemplate>
                        <Rectangle Width="20" Height="15" Fill="{Binding Path=ColorPlaylistBrush}"></Rectangle>
                    </DataTemplate>
                </DataGridTemplateColumn.CellTemplate>
            </extra:DataGridTemplateColumn>
            <extra:DataGridTemplateColumn extra:DataGridColumnAttached.CanUserHideColumn="True" Header="Trim" AutomationProperties.Name="Trim" Width="30" >
                <DataGridTemplateColumn.CellTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Trim}" Foreground="#FFBF00" FontSize="17" FontWeight="Bold" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </DataTemplate>
                </DataGridTemplateColumn.CellTemplate>
            </extra:DataGridTemplateColumn>
            <extra:DataGridTemplateColumn extra:DataGridColumnAttached.CanUserHideColumn="True" Header="Loop" AutomationProperties.Name="Loop" Width="30" >
                <DataGridTemplateColumn.CellTemplate>
                    <DataTemplate>
                        <extra:Icon Style="{StaticResource LoopIconStyle}" Visibility="{Binding Path=Loop,Converter={StaticResource BoolToVisibilityConverter}}" />
                    </DataTemplate>
                </DataGridTemplateColumn.CellTemplate>
            </extra:DataGridTemplateColumn>
            <extra:DataGridTemplateColumn extra:DataGridColumnAttached.CanUserHideColumn="True" 
                            Header="TO" AutomationProperties.Name="SO" Width="30" >
                <DataGridTemplateColumn.CellTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding StringOverlay.MediaOverlayIcon}" Foreground="#7FBF00" FontSize="17" FontWeight="Bold" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </DataTemplate>
                </DataGridTemplateColumn.CellTemplate>
            </extra:DataGridTemplateColumn>
            <extra:DataGridTemplateColumn extra:DataGridColumnAttached.CanUserHideColumn="True" 
                            Header="IO" AutomationProperties.Name="IO" Width="30" >
                <DataGridTemplateColumn.CellTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding ImageOverlay.MediaOverlayIcon}" Foreground="#BF0000" FontSize="17" FontWeight="Bold" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </DataTemplate>
                </DataGridTemplateColumn.CellTemplate>
            </extra:DataGridTemplateColumn>
            <extra:DataGridTemplateColumn extra:DataGridColumnAttached.CanUserHideColumn="True" 
                            Header="VO" AutomationProperties.Name="VO" Width="30" >
                <DataGridTemplateColumn.CellTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding VideoOverlay.MediaOverlayIcon}" Foreground="#FFB8B859" FontSize="17" FontWeight="Bold" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </DataTemplate>
                </DataGridTemplateColumn.CellTemplate>
            </extra:DataGridTemplateColumn>
            <extra:DataGridTemplateColumn Width="50" Header="Category"
                    extra:DataGridColumnAttached.CanUserHideColumn="True" AutomationProperties.Name="Category"  >
                <extra:DataGridTemplateColumn.CellTemplate>
                    <DataTemplate>
                        <Grid>
                            <Image Width="40" Height="40" Stretch="Fill" Source="{Binding Path=CategoryIcon}" VerticalAlignment="Center" HorizontalAlignment="Left"></Image>
                        </Grid>
                    </DataTemplate>
                </extra:DataGridTemplateColumn.CellTemplate>
            </extra:DataGridTemplateColumn>
            <extra:DataGridTextColumn extra:DataGridColumnAttached.CanUserHideColumn="True" AutomationProperties.Name="AliasName" Width="100"
                        Header="Name" Binding="{Binding Path=AliasName}"/>
            <extra:DataGridTemplateColumn extra:DataGridColumnAttached.CanUserHideColumn="True" AutomationProperties.Name="FileNameUrlDevice" Width="200"
                        Header="File/Device Name" >
                <extra:DataGridTemplateColumn.CellTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Path=File_Url_DeviceName}" VerticalAlignment="Center">
                            <TextBlock.Style>
                                <Style BasedOn="{StaticResource {x:Type TextBlock}}" TargetType="TextBlock">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding FileExist}" Value="False">
                                            <Setter Property="Foreground" Value="Red"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </DataTemplate>
                </extra:DataGridTemplateColumn.CellTemplate>
            </extra:DataGridTemplateColumn>

            <extra:DataGridTextColumn extra:DataGridColumnAttached.CanUserHideColumn="True" AutomationProperties.Name="MediaType" Width="80"
                        Header="Media Type" Binding="{Binding Path=MediaType}"/>
            <extra:DataGridTextColumn extra:DataGridColumnAttached.CanUserHideColumn="True" AutomationProperties.Name="Size" Width="80"
                        Header="Size" Binding="{Binding Path=WidthHeight}"/>
            <extra:DataGridDateTimeColumn extra:DataGridColumnAttached.CanUserHideColumn="True" AutomationProperties.Name="Length" Width="80"
                        Header="Length" Binding="{Binding Path=Duration}" FormatString="hh\:mm\:ss"/>
            <extra:DataGridDateTimeColumn extra:DataGridColumnAttached.CanUserHideColumn="True" AutomationProperties.Name="StartTime" Width="130"
                        Header="Start Time" Binding="{Binding Path=StartTime}" FormatString="yyyy/MM/dd hh\:mm\:ss" />
            <extra:DataGridDateTimeColumn extra:DataGridColumnAttached.CanUserHideColumn="True" AutomationProperties.Name="EndTime" Width="130"
                        Header="End Time" Binding="{Binding Path=EndTime}" FormatString="yyyy/MM/dd hh\:mm\:ss"/>
            <extra:DataGridTextColumn extra:DataGridColumnAttached.CanUserHideColumn="True" AutomationProperties.Name="StartTrim" Width="100"
                        Header="Start Trim" Binding="{Binding Path=TrimStartSecond}"/>
            <extra:DataGridTextColumn extra:DataGridColumnAttached.CanUserHideColumn="True" AutomationProperties.Name="EndTrim" Width="100"
                        Header="End Trim" Binding="{Binding Path=TrimStopSecond}"/>
            <extra:DataGridDateTimeColumn extra:DataGridColumnAttached.CanUserHideColumn="True" AutomationProperties.Name="TrimDuration" Width="100"
                        Header="Duration" Binding="{Binding Path=TrimDuration}" FormatString="hh\:mm\:ss"/>
            <!--<extra:DataGridCheckBoxColumn extra:DataGridColumnAttached.CanUserHideColumn="True" AutomationProperties.Name="ImageOEnable" Width="100"
                        Header="ImageO/Enable" Binding="{Binding Path=ImageOverlay.Enabled}"/>
            <extra:DataGridTextColumn extra:DataGridColumnAttached.CanUserHideColumn="True" AutomationProperties.Name="ImageOFile" Width="200"
                        Header="ImageO/FilePath" Binding="{Binding Path=ImageOverlay.FilePath}"/>
            <extra:DataGridCheckBoxColumn extra:DataGridColumnAttached.CanUserHideColumn="True" AutomationProperties.Name="TextOEnable" Width="100"
                        Header="ImageO/Enable" Binding="{Binding Path=StringOverlay.Enabled}"/>
            <extra:DataGridTextColumn extra:DataGridColumnAttached.CanUserHideColumn="True" AutomationProperties.Name="TextOText" Width="200"
                        Header="TextO/Text" Binding="{Binding Path=StringOverlay.Text}" extra:DataGridTextColumn>-->
        </DataGrid.Columns>
    </DataGrid>
</vbase:BaseUserControlView>
